// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  firstname          String
  lastname           String
  password           String
  albums             Album[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  PasswordResetToken PasswordResetToken[]

  @@map("users")
}

model Album {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  folderName  String
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  images      Image[] // One-to-many relationship with Image
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("albums")
}

model Image {
  id        Int      @id @default(autoincrement())
  albumId   Int
  album     Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("images")
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("password_reset_tokens")
}
